/*
 * Generated by Robotoworks Mechanoid
 */
package info.hannes.mechadmin_gen.ops

import android.content.Intent
import android.os.Bundle
import android.widget.Toast
import com.robotoworks.mechanoid.db.SQuery
import com.robotoworks.mechanoid.net.Response
import com.robotoworks.mechanoid.ops.OperationContext
import com.robotoworks.mechanoid.ops.OperationResult
import com.robotoworks.mechanoid.ops.Ops
import info.hannes.mechadmin.WebClient
import info.hannes.mechadmin_gen.rest.MxAdmin
import info.hannes.mechadmin_gen.rest.PostPictureApprovedRequest
import info.mx.tracks.ops.AbstractOpPostImagesOperation
import info.mx.tracks.sqlite.MxInfoDBContract
import info.mx.tracks.sqlite.PicturesRecord
import timber.log.Timber

internal class OpPostPictureApprovedOperation : AbstractOpPostPictureApprovedOperation() {
    override fun onExecute(context: OperationContext, args: Args): OperationResult {
        val webClient: MxAdmin = WebClient.mxAdmin!!
        return try {
            val request = PostPictureApprovedRequest(args.pictureRestId, args.status)
            val res = webClient.postPictureApproved(request)
            res.parse()
            res.checkResponseCode(Response.HTTP_NO_CONTENT)
            val rec = SQuery.newQuery()
                .expr(MxInfoDBContract.Pictures.REST_ID, SQuery.Op.EQ, args.pictureRestId)
                .selectFirst<PicturesRecord>(MxInfoDBContract.Pictures.CONTENT_URI)
            if (rec != null) {
                rec.approved = args.status.toLong()
                rec.changed = rec.changed - 1 // force update from server
                if (args.status == -1) {
                    rec.deleted = 1
                }
                rec.save()
            }

            // when we do it, and we make an error, it disappear immediate without chance to fix
            val intentM: Intent = AbstractOpPostImagesOperation.newIntent()
            Ops.execute(intentM)
            val bundle = Bundle()
            OperationResult.ok(bundle)
        } catch (e: Exception) {
            Timber.e(e)
            Toast.makeText(context.applicationContext, e.message, Toast.LENGTH_LONG).show()
            OperationResult.error(e)
        }
    }
}