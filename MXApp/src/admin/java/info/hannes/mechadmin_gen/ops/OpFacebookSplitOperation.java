/*
 * Generated by Robotoworks Mechanoid
 */
package info.hannes.mechadmin_gen.ops;

import android.os.Bundle;

import com.robotoworks.mechanoid.db.SQuery;
import com.robotoworks.mechanoid.ops.OperationContext;
import com.robotoworks.mechanoid.ops.OperationResult;
import com.robotoworks.mechanoid.ops.Ops;

import java.util.List;

import info.mx.tracks.common.SecHelper;
import timber.log.Timber;
import info.mx.tracks.ops.OpSyncFromServerOperation;
import info.mx.tracks.sqlite.MxInfoDBContract;
import info.mx.tracks.sqlite.TracksRecord;
import info.mx.tracks.sqlite.TrackstageRecord;

public class OpFacebookSplitOperation extends AbstractOpFacebookSplitOperation {
    @Override
    protected OperationResult onExecute(OperationContext context, Args args) {

        try {
            List<TracksRecord> tracks = SQuery.newQuery()
                    //                    .append(MxInfoDBContract.Tracks.URL + " <> ''")
                    .select(MxInfoDBContract.Tracks.CONTENT_URI);
            for (TracksRecord track : tracks) {
                String url = SecHelper.decryptB64(track.getUrl());
                if (url.contains("facebook")) {
                    String[] entries = url.split("\n");
                    String urlNew = "";
                    String facebookNew = "";
                    for (String entry : entries) {
                        if (entry.contains("facebook") && facebookNew.equals("")) {
                            facebookNew += entry.trim() + "\n";
                        } else {
                            urlNew += entry.trim() + "\n";
                        }
                    }
                    facebookNew = facebookNew.trim();
                    urlNew = urlNew.trim();
                    if (track.getFacebook() == null || track.getFacebook().equals("")) {
                        final TrackstageRecord stage = new TrackstageRecord();
                        stage.setTrackRestId(track.getRestId());
                        stage.setUrl(urlNew);
                        stage.setFacebook(facebookNew);
                        stage.save();
                    } else if (!SecHelper.decryptB64(track.getFacebook()).equals(facebookNew)) {
                        Timber.d("no " + track.getTrackname() + " " + facebookNew);
                    } else {
                        Timber.d("eq" + " " + track.getTrackname() + " " + facebookNew);
                    }
                }
            }
            Ops.execute(OpSyncFromServerOperation.newIntent(true, args.flavor));
            final Bundle bundle = new Bundle();
            return OperationResult.ok(bundle);
        } catch (final Exception e) {
            return OperationResult.error(e);
        }

    }
}
