/*
 * Generated by Robotoworks Mechanoid
 */
package info.mx.tracks.ops.google;

import com.robotoworks.mechanoid.Mechanoid;
import com.robotoworks.mechanoid.ops.Operation;
import com.robotoworks.mechanoid.ops.OperationContext;
import com.robotoworks.mechanoid.ops.OperationResult;
import com.robotoworks.mechanoid.ops.OperationServiceBridge;
import com.robotoworks.mechanoid.ops.OperationConfiguration;
import android.content.Intent;
import android.os.Bundle;

public abstract class AbstractOpGetRouteOperation extends Operation {
	public static final String ACTION_OP_GET_ROUTE = "info.mx.tracks.ops.google.MxGoogleService.actions.OP_GET_ROUTE";

	public static final String EXTRA_TRACK_CLIENT_ID = "info.mx.tracks.ops.google.MxGoogleService.extras.TRACK_CLIENT_ID";
	public static final String EXTRA_LAT = "info.mx.tracks.ops.google.MxGoogleService.extras.LAT";
	public static final String EXTRA_LON = "info.mx.tracks.ops.google.MxGoogleService.extras.LON";

	static class Args {
		public long trackClientId;
		public double lat;
		public double lon;
	}
	
	static class Configuration extends OperationConfiguration {
		@Override 
		public Operation createOperation() {
			return new OpGetRouteOperation();
		}
		
		@Override
		public Intent findMatchOnConstraint(OperationServiceBridge bridge, Intent intent) {
			android.os.Bundle matcher = new android.os.Bundle();
			android.os.Bundle intentExtras = intent.getExtras();
			matcher.putLong(
				OpGetRouteOperation.EXTRA_TRACK_CLIENT_ID, 
				intentExtras.getLong(OpGetRouteOperation.EXTRA_TRACK_CLIENT_ID));
			
			Intent existingRequest = bridge.findPendingRequestByActionWithExtras(AbstractOpGetRouteOperation.ACTION_OP_GET_ROUTE, matcher);

			return existingRequest;
		}
	}
	
	public static final Intent newIntent(long trackClientId, double lat, double lon) {
		Intent intent = new Intent(ACTION_OP_GET_ROUTE);
		intent.setClass(Mechanoid.getApplicationContext(), MxGoogleService.class);
		
		Bundle extras = new Bundle();
		extras.putLong(EXTRA_TRACK_CLIENT_ID, trackClientId);
		extras.putDouble(EXTRA_LAT, lat);
		extras.putDouble(EXTRA_LON, lon);
		
		intent.putExtras(extras);
		
		return intent;
		
	}

	@Override
	public OperationResult execute(OperationContext context) {
		Args args = new Args();
		
		Bundle extras = context.getIntent().getExtras();
		args.trackClientId = extras.getLong(EXTRA_TRACK_CLIENT_ID);
		args.lat = extras.getDouble(EXTRA_LAT);
		args.lon = extras.getDouble(EXTRA_LON);
		
		return onExecute(context, args);
	}
			
	protected abstract OperationResult onExecute(OperationContext context, Args args);
}
