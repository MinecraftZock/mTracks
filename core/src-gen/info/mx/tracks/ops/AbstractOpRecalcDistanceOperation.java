/*
 * Generated by Robotoworks Mechanoid
 */
package info.mx.tracks.ops;

import com.robotoworks.mechanoid.Mechanoid;
import com.robotoworks.mechanoid.ops.Operation;
import com.robotoworks.mechanoid.ops.OperationContext;
import com.robotoworks.mechanoid.ops.OperationResult;
import com.robotoworks.mechanoid.ops.OperationServiceBridge;
import com.robotoworks.mechanoid.ops.OperationConfiguration;
import android.content.Intent;
import android.os.Bundle;

public abstract class AbstractOpRecalcDistanceOperation extends Operation {
	public static final String ACTION_OP_RECALC_DISTANCE = "info.mx.tracks.ops.MxInfoService.actions.OP_RECALC_DISTANCE";

	public static final String EXTRA_LAT = "info.mx.tracks.ops.MxInfoService.extras.LAT";
	public static final String EXTRA_LON = "info.mx.tracks.ops.MxInfoService.extras.LON";
	public static final String EXTRA_PROVIDER = "info.mx.tracks.ops.MxInfoService.extras.PROVIDER";

	static class Args {
		public double lat;
		public double lon;
		public String provider;
	}
	
	static class Configuration extends OperationConfiguration {
		@Override 
		public Operation createOperation() {
			return new OpRecalcDistanceOperation();
		}
		
		@Override
		public Intent findMatchOnConstraint(OperationServiceBridge bridge, Intent intent) {
			Intent existingRequest = bridge.findPendingRequestByActionWithExtras(AbstractOpRecalcDistanceOperation.ACTION_OP_RECALC_DISTANCE, intent.getExtras());
			
			return existingRequest;
			
		}
	}
	
	public static final Intent newIntent(double lat, double lon, String provider) {
		Intent intent = new Intent(ACTION_OP_RECALC_DISTANCE);
		intent.setClass(Mechanoid.getApplicationContext(), MxInfoService.class);
		
		Bundle extras = new Bundle();
		extras.putDouble(EXTRA_LAT, lat);
		extras.putDouble(EXTRA_LON, lon);
		extras.putString(EXTRA_PROVIDER, provider);
		
		intent.putExtras(extras);
		
		return intent;
		
	}

	@Override
	public OperationResult execute(OperationContext context) {
		Args args = new Args();
		
		Bundle extras = context.getIntent().getExtras();
		args.lat = extras.getDouble(EXTRA_LAT);
		args.lon = extras.getDouble(EXTRA_LON);
		args.provider = extras.getString(EXTRA_PROVIDER);
		
		return onExecute(context, args);
	}
			
	protected abstract OperationResult onExecute(OperationContext context, Args args);
}
