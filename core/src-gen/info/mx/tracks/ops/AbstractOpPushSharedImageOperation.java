/*
 * Generated by Robotoworks Mechanoid
 */
package info.mx.tracks.ops;

import com.robotoworks.mechanoid.Mechanoid;
import com.robotoworks.mechanoid.ops.Operation;
import com.robotoworks.mechanoid.ops.OperationContext;
import com.robotoworks.mechanoid.ops.OperationResult;
import com.robotoworks.mechanoid.ops.OperationServiceBridge;
import com.robotoworks.mechanoid.ops.OperationConfiguration;
import android.content.Intent;
import android.os.Bundle;

public abstract class AbstractOpPushSharedImageOperation extends Operation {
	public static final String ACTION_OP_PUSH_SHARED_IMAGE = "info.mx.tracks.ops.MxInfoService.actions.OP_PUSH_SHARED_IMAGE";

	public static final String EXTRA_TRACK_REST_ID = "info.mx.tracks.ops.MxInfoService.extras.TRACK_REST_ID";
	public static final String EXTRA_URI = "info.mx.tracks.ops.MxInfoService.extras.URI";

	static class Args {
		public long trackRestId;
		public String uri;
	}
	
	static class Configuration extends OperationConfiguration {
		@Override 
		public Operation createOperation() {
			return new OpPushSharedImageOperation();
		}
		
		@Override
		public Intent findMatchOnConstraint(OperationServiceBridge bridge, Intent intent) {
			android.os.Bundle matcher = new android.os.Bundle();
			android.os.Bundle intentExtras = intent.getExtras();
			matcher.putLong(
				OpPushSharedImageOperation.EXTRA_TRACK_REST_ID, 
				intentExtras.getLong(OpPushSharedImageOperation.EXTRA_TRACK_REST_ID));
			matcher.putString(
				OpPushSharedImageOperation.EXTRA_URI, 
				intentExtras.getString(OpPushSharedImageOperation.EXTRA_URI));
			
			Intent existingRequest = bridge.findPendingRequestByActionWithExtras(AbstractOpPushSharedImageOperation.ACTION_OP_PUSH_SHARED_IMAGE, matcher);

			return existingRequest;
		}
	}
	
	public static final Intent newIntent(long trackRestId, String uri) {
		Intent intent = new Intent(ACTION_OP_PUSH_SHARED_IMAGE);
		intent.setClass(Mechanoid.getApplicationContext(), MxInfoService.class);
		
		Bundle extras = new Bundle();
		extras.putLong(EXTRA_TRACK_REST_ID, trackRestId);
		extras.putString(EXTRA_URI, uri);
		
		intent.putExtras(extras);
		
		return intent;
		
	}

	@Override
	public OperationResult execute(OperationContext context) {
		Args args = new Args();
		
		Bundle extras = context.getIntent().getExtras();
		args.trackRestId = extras.getLong(EXTRA_TRACK_REST_ID);
		args.uri = extras.getString(EXTRA_URI);
		
		return onExecute(context, args);
	}
			
	protected abstract OperationResult onExecute(OperationContext context, Args args);
}
