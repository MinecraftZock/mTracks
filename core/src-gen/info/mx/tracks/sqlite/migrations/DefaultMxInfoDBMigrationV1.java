/*
 * Generated by Robotoworks Mechanoid
 */
package info.mx.tracks.sqlite.migrations;

import android.database.sqlite.SQLiteDatabase;
import com.robotoworks.mechanoid.db.SQLiteMigration;

public class DefaultMxInfoDBMigrationV1 extends SQLiteMigration {
	@Override
	public void onBeforeUp(SQLiteDatabase db) {}
	
	@Override
	public void up(SQLiteDatabase db) {
		db.execSQL(
			"create table tracks ( " +
			"_id integer primary key autoincrement, " +
			"restId integer, " +
			"changed integer, " +
			"Trackname text default \"\", " +
			"Longitude real, " +
			"Latitude real, " +
			"Approved integer default 0, " +
			"Country text default \"\", " +
			"Url text default \"\", " +
			"Fees text default \"\", " +
			"Phone text default \"\", " +
			"Notes text default \"\", " +
			"Contact text default \"\", " +
			"NotesEn text default \"\", " +
			"Metatext text default \"\", " +
			"Licence text default \"\", " +
			"Kidstrack integer default -1, " +
			"Openmondays integer default 1, " +
			"Opentuesdays integer default 1, " +
			"Openwednesday integer default 1, " +
			"Openthursday integer default 1, " +
			"Openfriday integer default 1, " +
			"Opensaturday integer default 1, " +
			"Opensunday integer default 1, " +
			"Hoursmonday text default \"\", " +
			"Hourstuesday text default \"\", " +
			"Hourswednesday text default \"\", " +
			"Hoursthursday text default \"\", " +
			"Hoursfriday text default \"\", " +
			"Hourssaturday text default \"\", " +
			"Hourssunday text default \"\", " +
			"Tracklength integer default 0, " +
			"Soiltype integer default -1, " +
			"Camping integer default -1, " +
			"Shower integer default -1, " +
			"Cleaning integer default -1, " +
			"Electricity integer default -1, " +
			"Distance2location integer, " +
			"Supercross integer default -1, " +
			"trackaccess text default \"N\", " +
			"logoURL text default \"\", " +
			"showroom integer default -1, " +
			"workshop integer default -1, " +
			"validuntil integer, " +
			"brands text default \"\", " +
			"Nu_events text default \"\", " +
			"facebook text default \"\", " +
			"adress text default \"\", " +
			" " +
			"feescamping text default \"\", " +
			"daysopen text default \"\", " +
			"noiselimit text default \"\", " +
			"campingrvrvhookup integer, " +
			"singletracks integer, " +
			"mxtrack integer, " +
			"a4x4 integer, " +
			"utv integer, " +
			"quad integer, " +
			"trackstatus text default \"\", " +
			"areatype text default \"\", " +
			"schwierigkeit integer " +
			") "
		);	
		db.execSQL(
			"create table trackstage ( " +
			"_id integer primary key autoincrement, " +
			"restId integer, " +
			"created integer default ( strftime ( '%s' , 'now' ) ), " +
			"Country text default \"\", " +
			"Trackname text, " +
			"Longitude real, " +
			"Latitude real, " +
			"InsLongitude real, " +
			"InsLatitude real, " +
			"InsDistance integer, " +
			"Url text , " +
			"Phone text , " +
			"Notes text , " +
			"Contact text, " +
			"Licence text, " +
			"Kidstrack integer, " +
			"Membersonly integer, " +
			"Openmondays integer, " +
			"Opentuesdays integer, " +
			"Openwednesday integer, " +
			"Openthursday integer, " +
			"Openfriday integer , " +
			"Opensaturday integer, " +
			"Opensunday integer, " +
			"Hoursmonday text, " +
			"Hourstuesday text, " +
			"Hourswednesday text, " +
			"Hoursthursday text, " +
			"Hoursfriday text, " +
			"Hourssaturday text, " +
			"Hourssunday text, " +
			"Raceonly integer , " +
			"Tracklength integer, " +
			"Soiltype integer, " +
			"Camping integer, " +
			"Shower integer, " +
			"Cleaning integer, " +
			"Electricity integer, " +
			"Supercross integer, " +
			"trackaccess text, " +
			"facebook text, " +
			"Fees text, " +
			" " +
			"adress text default \"\", " +
			"feescamping text default \"\", " +
			"daysopen text default \"\", " +
			"noiselimit text default \"\", " +
			"campingRVhookups integer, " +
			"singleTrack integer, " +
			"MXTrack integer, " +
			"a4X4 integer, " +
			"UTV integer, " +
			"Quad integer, " +
			"rating integer, " +
			"trackstatus text default \"\", " +
			"areatype text default \"\", " +
			"schwierigkeit integer " +
			") "
		);	
		db.execSQL(
			"create table notes ( " +
			"_id integer primary key autoincrement, " +
			"restId integer, " +
			"changed integer, " +
			"track_restId integer, " +
			"country text not null, " +
			"note text default \"\" " +
			") "
		);	
		db.execSQL(
			"create table ratings ( " +
			"_id integer primary key autoincrement, " +
			"restId integer, " +
			"changed integer, " +
			"track_restId integer, " +
			"rating integer default 0, " +
			"username text default \"\", " +
			"note text default \"\", " +
			"country text default \"\", " +
			"deleted integer default 0, " +
			"approved integer default 1, " +
			"androidid text default \"\" " +
			") "
		);	
		db.execSQL(
			"create table favorits ( " +
			"_id integer primary key autoincrement, " +
			"track_restId integer " +
			") "
		);	
		db.execSQL(
			"create table country ( " +
			"_id integer primary key autoincrement, " +
			"country text default \"\", " +
			"show integer default 1 " +
			") "
		);	
		db.execSQL(
			"create view countrysum as " +
			"select _id as _id, Country as Country, count(*) as count " +
			"from tracks group by Country "
		);	
		db.execSQL(
			"create table pictures ( " +
			"_id integer primary key autoincrement, " +
			"restId integer, " +
			"changed integer, " +
			"username text default \"\", " +
			"comment text default \"\", " +
			"track_restId integer, " +
			"approved integer default 1, " +
			"deleted integer default 0, " +
			"localfile text default \"\", " +
			"localthumb text default \"\" " +
			") "
		);	
		db.execSQL(
			"create table series ( " +
			"_id integer primary key autoincrement, " +
			"restId integer, " +
			"changed integer, " +
			"name text, " +
			"seriesUrl text " +
			") "
		);	
		db.execSQL(
			"create table events ( " +
			"_id integer primary key autoincrement, " +
			"restId integer, " +
			"changed integer, " +
			"track_restId integer, " +
			"series_restId integer, " +
			"comment text, " +
			"approved integer default 1, " +
			"eventDate integer default 0 " +
			") "
		);	
		db.execSQL(
			"create view picturesum as " +
			"select _id as _id, " +
			"track_restId as track_restId , " +
			"count(*) as picturecount " +
			"from pictures " +
			"where approved > -1 " +
			"group by track_restId "
		);	
		db.execSQL(
			"create view ratingsum as " +
			"select _id as _id, " +
			"track_restId as track_restId, " +
			"count(*) as ratingcount, " +
			"round(avg(rating),1) as ratingavg " +
			"from ratings " +
			"where approved > -1 " +
			"group by track_restId "
		);	
		db.execSQL(
			"create view eventsum as " +
			"select _id as _id, " +
			"track_restId as track_restId, " +
			"count(*) as eventcount " +
			"from events " +
			"where approved > -1 and eventDate > strftime ( '%s' , 'now' ) " +
			"group by track_restId "
		);	
		db.execSQL(
			"create view tracksges as " +
			"select " +
			"Trackname as trackname, " +
			"Approved as Approved, " +
			"Distance2location as distance2location, " +
			"Openmondays as openmondays, " +
			"Opentuesdays as opentuesdays, " +
			"Nu_events as n_u_events, " +
			"Openwednesday as openwednesday, Openthursday as openthursday, " +
			"Openfriday as openfriday, Opensaturday as opensaturday, " +
			"Opensunday as opensunday, " +
			"Country as country, trackaccess as trackaccess, " +
			"restId as restId, tracks._id as _id, brands as brands, " +
			"Metatext as metatext, " +
			"Kidstrack as Kidstrack, Supercross as Supercross, " +
			"Shower as Shower, Cleaning as Cleaning, " +
			"Electricity as Electricity, Camping as Camping, " +
			"Latitude as Latitude, Longitude as Longitude, " +
			"Hoursmonday as Hoursmonday, " +
			"Hourstuesday as Hourstuesday, " +
			"Hourswednesday as Hourswednesday, " +
			"Hoursthursday as Hoursthursday, " +
			"Hoursfriday as Hoursfriday, " +
			"Hourssaturday as Hourssaturday, " +
			"Hourssunday as Hourssunday, " +
			"validuntil as validuntil, " +
			"Url as Url, " +
			"Phone as Phone, " +
			"Contact as Contact, " +
			"Notes as Notes, " +
			"Tracklength as Tracklength, " +
			"Soiltype as Soiltype, " +
			"facebook as facebook, " +
			"adress as adress, " +
			"Licence as Licence, " +
			"Fees as Fees, " +
			" " +
			"feescamping as feescamping, " +
			"daysopen as daysopen, " +
			"noiselimit as noiselimit, " +
			"campingrvrvhookup as campingrvrvhookup, " +
			"singletracks as singletracks, " +
			"mxtrack as mxtrack, " +
			"a4x4 as a4x4, " +
			"utv as utv, " +
			"quad as quad, " +
			"trackstatus as trackstatus, " +
			"areatype as areatype, " +
			"schwierigkeit as schwierigkeit, " +
			" " +
			"(cast (ifnull(ratingavg,0) as real)) as rating, " +
			"(cast(ifnull(picturecount,0) as integer)) as picturecount, " +
			"(cast(ifnull(eventcount,0) as integer)) as eventcount " +
			"from tracks " +
			"left join picturesum on tracks.restId = picturesum.track_restId " +
			"left join eventsum on tracks.restId = eventsum.track_restId " +
			"left join ratingsum on tracks.restId = ratingsum.track_restId "
		);	
		db.execSQL(
			"create view events2series as select " +
			"events._id as _id, " +
			"track_restId as track_restId, " +
			"series_restId as series_restId, " +
			"comment as comment, " +
			"events.approved as approved, " +
			"eventDate as eventDate, " +
			"name as seriesname " +
			"from events " +
			"left join series on events.series_restId = series.restId "
		);	
		db.execSQL(
			"create view countrycount as " +
			"select C._id as _id, C.country as Country, C.show as show, ifnull(S.count,0) as count " +
			"from country as C " +
			"left join countrysum as S on C.country = S.Country " +
			"group by S.Country "
		);	
		db.execSQL(
			"create table importstatus ( " +
			"_id integer primary key autoincrement, " +
			"msg text, " +
			"created integer default ( strftime ( '%s' , 'now' ) ) " +
			") "
		);	
	}
	
	@Override
	public void onAfterUp(SQLiteDatabase db) {}
}
