apply plugin: 'java'
apply plugin: 'jsonschema2pojo'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:1.1.3"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"

    // Required if generating equals, hashCode, or toString methods
    implementation 'commons-lang:commons-lang:2.6'
}

jsonSchema2Pojo {

    // Location of the JSON Schema file(s). This may refer to a single file or a directory of files.
    println files("${project.projectDir}/src/main/resources/backend_json").toList()
    source = files("${project.projectDir}/src/main/resources/backend_json")

    // Target directory for generated Java source files. The plugin will add this directory to the
    // java source set so the compiler will find and compile the newly generated source files.
    targetDirectory = file("${project.buildDir}/../../RxCommData/src/main/java")

    // Package name used for generated Java classes (for types where a fully qualified name has not
    // been supplied in the schema using the 'javaType' property).
    targetPackage = 'info.mx.comlib.retrofit.service.data'

    // The style of annotations to use in the generated Java types. Supported values:
    //  - jackson (alias of jackson2)
    //  - jackson2 (apply annotations from the Jackson 2.x library)
    //  - jackson1 (apply annotations from the Jackson 1.x library)
    //  - gson (apply annotations from the Gson library)
    //  - none (apply no annotations at all)
    annotationStyle = 'gson'

    // The type of input documents that will be read. Supported values:
    //  - jsonschema (schema documents, containing formal rules that describe the structure of json data)
    //  - json (documents that represent an example of the kind of json data that the generated Java types
    //          will be mapped to)
    sourceType = 'json'

    // Whether to empty the target directory before generation occurs, to clear out all source files
    // that have been generated previously. <strong>Be warned</strong>, when activated this option
    // will cause jsonschema2pojo to <strong>indiscriminately delete the entire contents of the target
    // directory (all files and folders)</strong> before it begins generating sources.
    removeOldOutput = true

    // The character encoding that should be used when writing the generated Java source files
    outputEncoding = 'UTF-8'

    // Make the generated types Parcelable for Android
    parcelable = true
    includeGeneratedAnnotation = false
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
