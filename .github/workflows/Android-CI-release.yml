name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Publish release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get the version
        id: tagger
        uses: jimschubert/query-tag-action@v2
        with:
          skip-unshallow: 'true'
          abbrev: false
          commit-ish: HEAD
      - name: Check pre-release
        run: |
          echo "tag=${{steps.tagger.outputs.tag}}"
          if [[ ${{ steps.tagger.outputs.tag }} == *alpha* || ${{ steps.tagger.outputs.tag }} == *beta* ]]
          then
             prerelease=true
          else
             prerelease=false
          fi
          echo "PRE_RELEASE=$prerelease" >> $GITHUB_ENV
          echo "prerelease=$prerelease"
      - name: Decrypt keystore
        run: ./signing/decrypt.sh
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.4
      - name: Build project
        run: ./gradlew assembleRelease
        env:
          CRYPT_PASS: ${{ secrets.CRYPT_PASS }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
          GOOGLE_MAP_API_KEY: ${{ secrets.GOOGLE_MAP_API_KEY }}
      - name: Publish Free
        run: ./gradlew :MXApp:publishFreeReleaseBundle -Dorg.gradle.project.track=alpha
      - name: Publish Pad
        run: ./gradlew :MXApp:publishPaidReleaseBundle -Dorg.gradle.project.track=alpha
      - name: Publish Admin
        run: ./gradlew :MXApp:publishAdminReleaseBundle -Dorg.gradle.project.track=alpha
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{steps.tagger.outputs.tag}}
          prerelease: ${{ env.PRE_RELEASE }}
          name: ${{steps.tagger.outputs.tag}}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
